name: hook0

volumes:
  postgres-data:
  mailpit-data:

services:
  postgres:
    image: postgres:17
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?postgres}
      - POSTGRES_DB=${POSTGRES_DB:-hook0}
    ports:
      - "5439:5432" # externe:interne
    networks:
      - hook0
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      timeout: 1s
      interval: 5s

  mailpit:
    image: axllent/mailpit:v1.27
    volumes:
      - mailpit-data:/data
    environment:
      - MP_DATABASE=/data/mailpit.db
      - SERVICE_FQDN_MAILPIT_8025=/mailpit
      - SERVICE_FQDN_MAILPIT_1025
    ports:
      - "8027:8025"
      - "1025:1025"
    networks:
      - hook0
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider --user-agent 'docker-compose-healthcheck' http://localhost:8025/api/v1/info || exit 1"]
      timeout: 1s
      interval: 5s

  api:
    build:
      context: .
      dockerfile: api/Dockerfile
      args:
        FEATURES: "reqwest-rustls-tls-webpki-roots,application-secret-compatibility"
    environment:
      - IP=0.0.0.0
      - PORT=${API_PORT:-8081}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-*}
      - DATABASE_URL=postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:?postgres}@postgres:5432/${POSTGRES_DB:-hook0}
      - SMTP_CONNECTION_URL=smtp://mailpit:1025
      - EMAIL_SENDER_ADDRESS=${EMAIL_SENDER_ADDRESS:?sender@hook0.local}
      - APP_URL=${APP_URL:?http://localhost:8001}
      - BISCUIT_PRIVATE_KEY=${BISCUIT_PRIVATE_KEY:?change-me-in-prod}
      - SERVICE_FQDN_API_${API_PORT:-8081}=/api
    ports:
      - "8081:8081"
    networks:
      - hook0
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl --fail --user-agent 'docker-compose-healthcheck' http://localhost:$${PORT}/api/v1/swagger.json || exit 1"]
      timeout: 1s
      interval: 5s
    depends_on:
      postgres:
        condition: service_healthy
      mailpit:
        condition: service_healthy

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    environment:
      - SERVICE_FQDN_FRONTEND_80
    ports:
      - "8001:80"
    networks:
      - hook0
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl --fail --user-agent 'docker-compose-healthcheck' http://localhost || exit 1"]
      timeout: 1s
      interval: 5s
    depends_on:
      api:
        condition: service_healthy

  output-worker:
    build:
      context: .
      dockerfile: output-worker/Dockerfile
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:?postgres}@postgres:5432/${POSTGRES_DB:-hook0}
      - WORKER_NAME=${WORKER_NAME:-default}
      - DISABLE_TARGET_IP_CHECK=true
    networks:
      - hook0
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      api:
        condition: service_healthy

networks:
  hook0:
    driver: bridge
